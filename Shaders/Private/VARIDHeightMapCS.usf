// This source code is provided "as is" without warranty of any kind, either express or implied. Use at your own risk.
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

#pragma once

#include "/Engine/Private/Common.ush"

uint2 DispatchThreadIDOffset;
float2 TexelSize;
SamplerState LinearSampler;
SamplerState PointSampler;
StructuredBuffer<float4> VFMapPoints;
uint NumVFMapPoints;
RWTexture2D<float> OutUAV;
float InOriginOffset;

const static float StdDev = 0.025;
const static float RBFDenominator = 2.0 * StdDev * StdDev;

// interpolation using gaussian RBF
[numthreads(8, 8, 1)]
void MainCS
(
    uint3 DispatchThreadID : SV_DispatchThreadID
)
{  
    uint2 ID = DispatchThreadIDOffset + DispatchThreadID.xy;
    float2 UV = TexelSize * (ID + 0.5);

    float InterpolatedValue = InOriginOffset;

    for (int i = 0; i < NumVFMapPoints; ++i)
    {
        float len = length(UV - VFMapPoints[i].xy);
        InterpolatedValue += VFMapPoints[i].z * exp(-(len * len) / RBFDenominator); // NOTE z component of a point holds the 'height' value.
    }

    OutUAV[ID] = clamp(InterpolatedValue, 0.0, 1.0);
}