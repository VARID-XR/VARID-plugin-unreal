// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

#pragma once

#include "/Engine/Private/Common.ush"
#include "VARIDCommon.ush"

uint2 InDispatchThreadIDOffset;
float2 InTexelSize;
SamplerState InBilinearSampler;
SamplerState InPointSampler;
uint2 InTextureSize;
Texture2D<float4> InColourSRV;
Texture2D<float> InMaskSRV;
Texture2D<float4> InPositionCostSRV;
RWTexture2D<float2> OutPositionUAV;

float GetTotalCost(float4 PositionCost)
{
	return PositionCost.b + PositionCost.a;
}

[numthreads(8, 8, 1)]
void MainCS
(
	uint3 GroupID : SV_GroupID,
	uint3 GroupThreadID : SV_GroupThreadID,
	uint3 DispatchThreadID : SV_DispatchThreadID,
	uint GroupIndex : SV_GroupIndex
)
{
	uint2 ID = InDispatchThreadIDOffset + DispatchThreadID.xy;

	if (InMaskSRV[ID].r > MaskThreshold)
	{
		// InPositionCostSRV.xy = position
		// InPositionCostSRV.b = spatial cost
		// InPositionCostSRV.a = appearance cost

		float4 PositionCost = InPositionCostSRV[ID];
		float4 PositionCostTop = InPositionCostSRV[ID + TopOffset];
		float4 PositionCostBottom = InPositionCostSRV[ID + BottomOffset];
		float4 PositionCostLeft = InPositionCostSRV[ID + LeftOffset];
		float4 PositionCostRight = InPositionCostSRV[ID + RightOffset];

		if (GetTotalCost(PositionCostTop) < GetTotalCost(PositionCost))
		{
			PositionCost = PositionCostTop;
		}
		if (GetTotalCost(PositionCostBottom) < GetTotalCost(PositionCost))
		{
			PositionCost = PositionCostBottom;
		}
		if (GetTotalCost(PositionCostLeft) < GetTotalCost(PositionCost))
		{
			PositionCost = PositionCostLeft;
		}
		if (GetTotalCost(PositionCostRight) < GetTotalCost(PositionCost))
		{
			PositionCost = PositionCostRight;
		}

		OutPositionUAV[ID] = PositionCost.xy; // already in UV format
	}
	else
	{
		OutPositionUAV[ID] = InTexelSize * (ID + 0.5);
	}
}